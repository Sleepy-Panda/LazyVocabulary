@using LazyVocabulary.Web.Models;
@model ChangePasswordViewModel

<div id="form" class="form-horizontal">
    @{
        if (ViewBag.Result == "Success")
        {
            <div id="result" class="alert alert-success alert-dismissible fade in top" role="alert" style="display:none;">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <span>Пароль успешно изменён.</span>
            </div>
        }
        if (ViewBag.Result == "Error")
        {
            <div id="result" class="alert alert-danger alert-dismissible fade in top" role="alert" style="display:none;">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <span>Произошла ошибка, пароль не был изменён.</span>
            </div>
        }
    }

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <h3>Изменение пароля</h3>

    <div class="form-group">
        <label class="required" for="Password">Введите Ваш действующий пароль</label>
        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label class="required" for="NewPassword">Введите Ваш новый пароль</label>
        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label class="required" for="ConfirmNewPassword">Повторите Ваш новый пароль</label>
        @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ConfirmNewPassword, "", new { @class = "text-danger" })
    </div>
</div>
